$modalPadding: 24;
$headerBodyGap: 12;
$footerTopGap: 16;
$closeIconButtonMarginX: -6;
$closeIconButtonMarginY: -6;

@keyframes overlayShow {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes contentShow {
  from {
    transform: translate(0, -2%) scale(0.95);
    opacity: 0;
  }

  to {
    transform: translate(0, 0) scale(1);
    opacity: 1;
  }
}

.ModalOverlay {
  position: fixed;
  z-index: var(--b-modal-z-index);
  inset: 0;

  overflow-y: auto;
  display: grid;
  place-items: center;

  padding: var(--b-modal-collision-padding);

  background-color: var(--bgtxt-absolute-black-lighter);

  &:where([data-state='open']) {
    animation: overlayShow var(--transition-m);
  }
}

.ModalContent {
  position: relative;

  overflow: visible;

  box-sizing: border-box;
  width: var(--b-modal-width);
  min-width: 360px;
  max-width: 100vw;
  height: var(--b-modal-height);
  max-height: 100%;

  color: var(--bg-grey-darkest);
  word-break: break-word;

  background-color: var(--bg-white-high);
  border-radius: var(--radius-20);
  box-shadow: var(--ev-4);

  &:where([data-state='open']) {
    animation: contentShow var(--transition-m);
  }

  &:focus {
    outline: none;
  }

  /* NOTE(@ed): to show a focus ring when the modal is mounted */
  & [data-component='BezierButton']:focus {
    outline: 3px solid var(--bgtxt-cobalt-light);
  }
}

.ModalSection {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
}

.ModalBody {
  flex: 1;
  padding: #{$modalPadding}px;
}

.ModalHeader {
  display: flex;
  flex-direction: column;
  gap: 12px;
  padding: #{$modalPadding}px #{$modalPadding}px 0 #{$modalPadding}px;

  /* NOTE(@ed): Support when ModalBody is used as stand-alone */
  &:where(:not(.hidden)) + :is(.ModalBody, * .ModalBody) {
    padding-top: #{$headerBodyGap}px;
  }
}

.ModalFooter {
  display: flex;
  padding: #{$footerTopGap}px #{$modalPadding}px #{$modalPadding}px;

  /* NOTE(@ed): Support when ModalFooter is used without ModalBody */
  :is(.ModalBody + &, .ModalBody + * &) {
    margin-top: #{$footerTopGap - $modalPadding}px;
    padding-top: 0;
  }
}

.TitleContainer {
  display: flex;
  flex-direction: row;
  gap: 6px;
  width: 100%;
}

.HeadingGroup {
  display: flex;
  flex: 1;
  flex-direction: column-reverse;
  gap: 4px;
}

.Title {
  width: 100%;
}

.CloseIconButton {
  position: absolute;
  top: #{$modalPadding + $closeIconButtonMarginY}px;
  right: #{$modalPadding + $closeIconButtonMarginX}px;
}

.CloseIconButtonSpacer {
  pointer-events: none;
  margin-top: #{$closeIconButtonMarginY}px;
  margin-right: #{$closeIconButtonMarginX}px;
  visibility: hidden;
}

.FooterLeftContent {
  margin-right: auto;
}

.FooterRightContent {
  margin-left: auto;
}
