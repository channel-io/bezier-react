@use '../../styles/mixins/dimension';

@keyframes rotate {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

.Spinner {
  --b-spinner-size: initial;
  --b-spinner-track-color: initial;
  --b-spinner-indicator-color: initial;
  --b-spinner-stroke-thickness: initial;

  /* NOTE: stroke-width is fixed for the exceptional case of use inside buttons */
  --b-spinner-stroke-width: 2px;
  --b-spinner-view-box-size: 16;
  --b-spinner-stroke-dasharray: 16 9999;

  @include dimension.square(calc(1px * var(--b-spinner-size)));

  display: inline-flex;
  animation: rotate 1s linear infinite;

  & :where(.track) {
    fill: none;
    stroke: var(--b-spinner-track-color);
    stroke-linecap: round;
    stroke-width: var(--b-spinner-stroke-width);
  }

  & :where(.indicator) {
    fill: none;
    stroke: var(--b-spinner-indicator-color);
    stroke-dasharray: var(--b-spinner-stroke-dasharray);
    stroke-linecap: round;
    stroke-width: var(--b-spinner-stroke-width);
  }

  &:where(.size-s, .size-m) {
    --b-spinner-stroke-width: calc(
      var(--b-spinner-stroke-thickness) * var(--b-spinner-view-box-size) /
        var(--b-spinner-size)
    );
  }

  &:where(.size-s) {
    --b-spinner-size: 28;
    --b-spinner-stroke-thickness: 4px;
  }

  &:where(.size-m) {
    --b-spinner-size: 50;
    --b-spinner-stroke-thickness: 6px;
  }

  &:where(.variant-primary) {
    --b-spinner-track-color: var(--alpha-color-primary-bg-lightest);
    --b-spinner-indicator-color: var(--alpha-color-fg-blue-normal);
  }

  &:where(.variant-secondary) {
    --b-spinner-track-color: var(--alpha-color-bg-black-light);
    --b-spinner-indicator-color: var(--alpha-color-fg-black-light);
  }

  &:where(.variant-on-overlay) {
    --b-spinner-track-color: var(--alpha-color-bg-absolute-white-lightest);
    --b-spinner-indicator-color: var(--alpha-color-fg-absolute-white-light);
  }
}
